gpf:
  ros__parameters:
    cropbox:
      enable: true
      min:
        x: -10.0
        y: -10.0
        z: -10.0
      max:
        x: 6.0
        y: 10.0
        z: 10.0

    downsampling:
      enable: true
      leaf_size:
        xy: 0.02
        z: 0.02

    supervoxel:
    # https://pcl.readthedocs.io/projects/tutorials/en/latest/supervoxel_clustering.html
    # https://www.sciencedirect.com/science/article/pii/S0924271618301370
      use_single_camera_transform: true
      voxel_resolution: .2
      seed_resolution: 1.
      importance:
        spatial: 1.0
        color: 0.
      normal:
        enable: true
        importance: 1.0
        search_radius: .05
      refinement:
        enable: true
        iterations: 5

    segmentation:
      lccp:
      # https://www.cv-foundation.org/openaccess/content_cvpr_2014/papers/Stein_Object_Partitioning_using_2014_CVPR_paper.pdf
        concavity_tolerance_threshold: 15.0
        smoothness_threshold: 0.25
        min_segment_size: 1
        k_factor: 0
        sanity_criterion: true
      cpc:
      # https://openaccess.thecvf.com/content_cvpr_2015/papers/Schoeler_Constrained_Planar_Cuts_2015_CVPR_paper.pdf
      # /** \brief Determines if we want to use cutting planes
      #  *  \param[in] max_cuts Maximum number of cuts
      #  *  \param[in] cutting_min_segments Minimum segment size for cutting
      #  *  \param[in] cutting_min_score Minimum score a proposed cut has to achieve for being performed
      #  *  \param[in] locally_constrained Decide if we constrain our cuts locally
      #  *  \param[in] directed_cutting Decide if we prefer cuts perpendicular to the edge-direction
      #  *  \param[in] clean_cutting Decide if we cut only edges with supervoxels on opposite sides of the plane (clean) or all edges within the seed_resolution_ distance to the plane (not clean). The later was used in the paper.
      #  */
        max_cuts: 1000
        cutting_min_segments: 1
        cutting_min_score: 0.05
        local_constrain: false
        directed_cutting: false
        clean_cutting: false
        ransac_iterations: 2000

    sample_consensus:
      min_segment_size: 50
      plane:
        enable: false
        distance_threshold: 0.005
        probability: 0.99
        max_iterations: 1000
        min_inlier_proportion: 0.02
        merge_precision: 0.25
      sphere:
        enable: false
        distance_threshold: 0.005
        probability: 0.99
        max_iterations: 1000
        min_inlier_proportion: 0.7
        min_radius: 0.01
        max_radius: 2.
      cylinder:
        enable: true
        # Depends on the resolution of your point cloud. 
        # setDistanceThreshold tells RANSAC the maximum distance from the model to a potential inlier point.
        # So the value for setDistanceThreshold should be larger than the resolution, but not too large.
        distance_threshold: 0.08
        # Desired probability of choosing at least one sample free from outliers (user given parameter).
        probability: 0.99
        max_iterations: 2000
        # if (cylinder.validity.inlier_proportion < parameters_.cylinder.min_inlier_proportion) return .... consider false
        min_inlier_proportion: 0.05
        min_radius: 0.05
        max_radius: 3.

    publish_markers: true
    visualise: false
    use_sim_time: true
